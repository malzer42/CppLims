pipeline {
    agent any
    environment {
        DOCKER_HUB_CREDENTIALS = credentials('dockerhub-creds') // Jenkins credential ID for Docker Hub
        GITHUB_REPO_URL = 'https://github.com/malzer42/CppLims.git'
        DOCKER_IMAGE = 'pmulamba/cpplims'
        DOCKER_TAG = 'latest'
    }
    triggers {
        pollSCM 'H/5 * * * *'
    }
    stages {
        stage('Clone Repository') {
            steps {
                // Cloning the repository from GitHub
                git branch: 'main', url: "${GITHUB_REPO_URL}"
            }
        }

        stage('Build with CMake') {
            steps {
                script {
                    // Create build directory and run cmake
                    sh '''
                        mkdir -p build
                        cd build
                        cmake ..
                        make
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run the compiled binary (assuming it's called 'myapp')
                    sh '''
                        cd build
                        ./cpp_lims
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image from Dockerfile
                    sh '''
                        docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} .
                    '''
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Log in to Docker Hub and push the image
                    sh '''
                        echo ${DOCKER_HUB_CREDENTIALS_PSW} | docker login -u ${DOCKER_HUB_CREDENTIALS_USR} --password-stdin
                        docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
                    '''
                }
            }
        }
    }

    post {
        always {
            // Clean up workspace after build
            cleanWs()
        }
        failure {
            // Notify on build failure
            mail to: 'pmulamba@gmail.com',
                subject: "Build Failed in Jenkins: ${env.JOB_NAME} - ${env.BUILD_NUMBER}",
                body: "Something went wrong. Check the console output for more details."
        }
    }
}
