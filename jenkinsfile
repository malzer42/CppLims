pipeline {
    agent any

    environment {
        DOCKER_CREDENTIALS = credentials('dockerhub-creds') // Reference Docker Hub credentials
        DOCKER_IMAGE = 'pmulamba/cpplims'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'master' 
                url: 'https://github.com/malzer42/CppLims.git'
            }
        }

        stage('Build with Make') {
            steps {
                sh 'mkdir -p build'
                sh 'cd build'
                sh 'cmake ..'
                sh 'make clean'
                sh 'make'        // Compile the C++ program
            }
        }

        stage('Run Executable') {
            steps {
                sh './cpp_lims'  // Run the compiled program
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_IMAGE}:latest") // Build Docker image with tag 'latest'
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    docker.image("${DOCKER_IMAGE}:latest").inside {
                        sh './cpp_lims'  // Run the executable inside Docker container
                    }
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-creds') {
                        docker.image("${DOCKER_IMAGE}:latest").push()  // Push Docker image to Docker Hub
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up Docker environment'
            sh 'docker system prune -f'  // Optional: Clean up any unused Docker objects
        }
    }
}
